<%- include("../../partials/head") %>
<div class="container" id="bookEditBody">
    <h1 class="mt-2">Редактировать книгу</h1>
    <edit-book :book="book" :subgenre="subgenre" :genre="genre" :current-subgenre="currentSubgenre" 
    :current-genre="currentGenre" :handle-click-genre="handleClickGenre" :handle-clic-subgenre="handleClicSubgenre"
    :current-author="currentAuthor" :authors="authors" :current-img-path="currentImgPath" :hadle-change-img="hadleChangeImg"
    :current-series="currentSeries" :current-pub="currentPub" :pub="pub" :series="series"
    :handle-click-pub="handleClickPub" :handle-click-series="handleClickSeries" :handle-click-author="handleClickAuthor"
    :back-handle="backHandle" :handle-save="handleSave" :handle-click-age="handleClickAge" :handle-click-cover="handleClickCover"></edit-book>
</div>
<script>
    const bookEditBody = Vue.createApp({
        data(){
            return{
                book:new Object(),
                idBook:0,
                genre:[],
                subgenre:[],
                authors:[],
                pub:[],
                series:[],
                currentGenre:new Object(),
                currentSubgenre:new Object(),
                currentAuthor:new Object(),
                currentImgPath:new String(),
                currentSeries:new Object(),
                currentPub:new Object(),
                currentFileImg:new Object(),
                isNew:false
            }
        },
        methods:{
            //Методы получения данных
            async getBookForEdit(){
                this.idBook = new URL(location.href).searchParams.get('id')
                const res = await fetch(`http://localhost:9001/sotrudnik/json/get-edit-book/${this.idBook}`)
                if(res.ok){
                    this.book = await res.json()
                }
            },
            async getCurrentSubgenreGenre(){
                const res = await fetch(`http://localhost:9001/sotrudnik/json/get-current-edit-book-genre-subgenre/${this.idBook}`)
                if(res.ok){
                    const buffer = await res.json()
                    this.currentGenre = await buffer.genre
                    this.currentSubgenre = await buffer.subgenre
                }
            },
            async getGenreSubGenre(){
                const res = await fetch(`http://localhost:9001/sotrudnik/json/get-edit-book-genre-subgenre`)
                if(res.ok){
                    const buffer = await res.json()
                    this.genre = await buffer.genre
                    this.subgenre = await buffer.subgenre
                }
            },
            async getAuthor(){
                const res = await fetch(`http://localhost:9001/sotrudnik/json/get-current-author/${this.idBook}`)
                if(res.ok){
                    this.currentAuthor = await res.json()
                }
            },
            async getAllAuthors(){
                const res = await fetch(`http://localhost:9001/sotrudnik/json/get-all-authors`)
                if(res.ok){
                    this.authors = await res.json()
                }
            },
            async getImgPath(){
                this.currentImgPath = 'http://localhost:9001/get-image/'+this.idBook+'.jpg'
            },
            async getCurrentPubSeries(){
                const res = await fetch(`http://localhost:9001/sotrudnik/json/get-current-pub-series/${this.idBook}`)
                if(res.ok){
                    const buffer = await res.json()
                    this.currentPub = await buffer.publishing
                    this.currentSeries = await buffer.series
                  
                }
            },
            async getAllSeiresPub(){
                const res = await fetch(`http://localhost:9001/sotrudnik/json/get-all-series-pub`)
                if(res.ok){
                    const buffer = await res.json()
                    this.pub = await buffer.pub
                    this.series = await buffer.series
                    console.log(this.pub)
                    console.log(this.series)
                }
            },
            //Возврат
            backHandle(){
                location.href='http://localhost:9001/sotrudnik/content/get-book-list'
            },
            //Обработчики
            handleClickGenre(elem){
                this.currentGenre = elem
                this.currentSubgenre = new Object()
                this.currentSubgenre.name = "Выберите поджанр"
            },
            handleClicSubgenre(elem){
                this.currentSubgenre = elem
            },
            hadleChangeImg(el){
                this.currentImgPath = URL.createObjectURL(el.target.files[0])
                this.currentFileImg = el.target.files[0]
                this.currentFileImg.name = this.idBook+".jpg"
                console.log(this.currentFileImg)
            },
            handleClickPub(elem){
                this.currentPub = elem
                this.currentSeries = new Object()
                this.currentSeries.name = "Выберите серию"
            },
            handleClickSeries(elem){
                this.currentSeries = elem
            },
            handleClickAuthor(elem){
                this.currentAuthor = elem
            },
            async handleSave(){
                const saveData = {
                    book:this.book,
                    genre:this.currentGenre,
                    subgenre:this.currentSubgenre,
                    author:this.currentAuthor,
                    series:this.currentSeries,
                    pub:this.currentPub
                }
                console.log(saveData)
                const res = await fetch(
                    `http://localhost:9001/sotrudnik/save/post-edit-book/${this.idBook}`,{
                    headers:{
                        "Content-Type":"application/json"
                    },
                    body:JSON.stringify(saveData),
                    method:'POST'
                })
                const formData = new FormData()
                formData.append('file',this.currentFileImg)
                if(!this.idBook){
                    const buffer = await res.json()
                    this.idBook = buffer.id
                }
                const resSaveImg = await fetch(`http://localhost:9001/sotrudnik/save/img/${this.idBook}`,
                {
                    body:formData,
                    method:'POST'
                }
                )
                if(res.ok&&resSaveImg.ok){
                    alert("Запись обновлена!")
                }
            },
            handleClickAge(elem){
                this.book.ageRestrictions = elem.target.innerText
                console.log(elem)
            },
            handleClickCover(elem){
                this.book.coverType = elem.target.innerText
            }
        },
        mounted(){
            this.idBook = new URL(location.href).searchParams.get('id')
            if(this.idBook){
                this.getBookForEdit()
                this.getCurrentSubgenreGenre()
                this.getAuthor()
                this.getCurrentPubSeries()
                this.getImgPath()
            }
            this.getGenreSubGenre()
            this.getAllAuthors()
            this.getAllSeiresPub()
        }
    })
    bookEditBody.component('edit-book',{
        props:['backHandle','book','subgenre', 'genre','currentSubgenre','currentGenre',
        'handleClickGenre','handleClicSubgenre','authors',
        'currentAuthor','currentImgPath','hadleChangeImg','currentSeries','currentPub',
        'pub', 'series','handleClickPub','handleClickSeries','handleClickAuthor','handleSave','handleClickAge','handleClickCover'],
        template:`   <div class="row mt-4">
        <div class="col-2">
            <svg style="cursor: pointer;" @click="backHandle" xmlns="http://www.w3.org/2000/svg" width="50" height="50" fill="blue" class="bi bi-arrow-left-circle-fill" viewBox="0 0 16 16">
                <path d="M8 0a8 8 0 1 0 0 16A8 8 0 0 0 8 0zm3.5 7.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5z"/>
              </svg>
        </div>
        <div class="col">
            <!-- <img   height="138"  src="http://localhost:9001/get-image/2.jpg"> -->
            <div class="mt-4">
                <label for="exampleFormControlTextarea1" class="form-label">Название</label>
                <input class="form-control me-2" id="exampleFormControlTextarea1" type="search" placeholder="" aria-label="Search" v-model="book.name">
            </div>
            <div class="mt-4">
                <label for="exampleFormControlTextarea2" class="form-label">Описание</label>
                <textarea class="form-control" id="exampleFormControlTextarea2" rows="3" v-model="book.discription"></textarea>
            </div>
            <div class="row mt-4">
                <div class="row">
                    <div class="col">
                        <img   height="250"  :src="currentImgPath">
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <label for="formFile" class="form-label">Обложка</label>
                        <input class="form-control" name="file" type="file" id="formFile" @change="hadleChangeImg" accept=".jpg, jpeg">
                    </div>
                </div>
                <div class="row mt-5">
                    <div class="col-3">
                        <button type="button" class="btn btn-success" @click="handleSave">Сохранить</button>
                    </div>
                    <div class="col-3">
                        <button type="button" class="btn btn-danger">Удалить</button>
                    </div>
                </div>  
            </div>
        </div>
        <div class="col">
            <div class="row  mt-2">
                <div class="col">
                    <div class="dropdown">
                        <button class="btn btn-secondary dropdown-toggle w-100"  type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                          {{currentAuthor.authorName+" "+currentAuthor.lastname}}
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                          <li v-for="item in authors"><a class="dropdown-item" @click="handleClickAuthor(item)">{{item.authorName +" "+item.lastname}}</a></li>
                        </ul>
                      </div>
                </div>
            </div>
            <div class="row  mt-2">
                <div class="col">
                    <div class="dropdown">
                        <button class="btn btn-secondary dropdown-toggle w-100" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                          {{currentGenre.name}}
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                          <li v-for="item in genre"><a class="dropdown-item" @click="handleClickGenre(item)">{{item.name}}</a></li>
                        </ul>
                      </div>
                </div>
            </div>
            <div class="row  mt-2">
                <div class="col">
                    <div class="dropdown">
                        <button class="btn btn-secondary dropdown-toggle w-100" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                          {{currentSubgenre.name}}
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                          <li v-for="item in subgenre"><a class="dropdown-item" v-if="item.genreFk===currentGenre.id" @click="handleClicSubgenre(item)" >{{item.name}}</a></li>
                        </ul>
                      </div>
                </div>
            </div>
            <div class="row  mt-2">
                <div class="col">
                    <div class="dropdown">
                        <button class="btn btn-secondary dropdown-toggle w-100" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                          {{currentPub.name}}
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                          <li v-for="item in pub"><a class="dropdown-item"   @click="handleClickPub(item)" >{{item.name}}</a></li>
                        </ul>
                      </div>
                </div>
            </div>
            <div class="row  mt-2">
                <div class="col">
                    <div class="dropdown">
                        <button class="btn btn-secondary dropdown-toggle w-100" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                          {{currentSeries.name}}
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                          <li v-for="item in series"><a class="dropdown-item" v-if="item.publishingFk===currentPub.id" @click="handleClickSeries(item)" >{{item.name}}</a></li>
                        </ul>
                      </div>
                </div>
            </div>
            <div class="row  mt-2">
                <div class="col">
                    <div class="dropdown">
                        <button class="btn btn-secondary dropdown-toggle w-100" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                          {{book.ageRestrictions}}
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                          <li><a class="dropdown-item a-btn"  @click="handleClickAge">не задано</a></li>
                          <li><a class="dropdown-item a-btn"  @click="handleClickAge">6+</a></li>
                          <li><a class="dropdown-item a-btn"  @click="handleClickAge">12+</a></li>
                          <li><a class="dropdown-item a-btn"  @click="handleClickAge">16+</a></li>
                          <li><a class="dropdown-item a-btn"  @click="handleClickAge">18+</a></li>

                        </ul>
                      </div>
                </div>
            </div>
            <div class="row  mt-2">
                <div class="col">
                    <div class="dropdown">
                        <button class="btn btn-secondary dropdown-toggle w-100" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                          {{book.coverType}}
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                          <li><a class="dropdown-item a-btn"  @click="handleClickCover">мягкий переплёт</a></li>
                          <li><a class="dropdown-item a-btn"  @click="handleClickCover">твердый переплет</a></li>
                        </ul>
                      </div>
                </div>
            </div>
            <div class="row  mt-2">
                <div class="col">
                    <label for="exampleFormControlTextarea1" class="form-label">Год издания</label>
                    <input class="form-control me-2" id="exampleFormControlTextarea1" type="search" placeholder="" aria-label="Search" v-model="book.yearPublishing">
                </div>
            </div>
            <div class="row  mt-2">
                <div class="col">
                    <label for="exampleFormControlTextarea1" class="form-label">ISBN</label>
                    <input class="form-control me-2" id="exampleFormControlTextarea1" type="search" placeholder="" aria-label="Search" v-model="book.isbn">
                </div>
            </div>
            <div class="row  mt-2">
                <div class="col">
                    <label for="exampleFormControlTextarea1" class="form-label">Количество страниц</label>
                    <input class="form-control me-2" id="exampleFormControlTextarea1" type="search" placeholder="" aria-label="Search" v-model="book.countPages">
                </div>
            </div>
            <div class="row  mt-2">
                <div class="col">
                    <label for="exampleFormControlTextarea1" class="form-label">Высота</label>
                    <input class="form-control me-2" id="exampleFormControlTextarea1" type="search" placeholder="" aria-label="Search" v-model="book.height">
                </div>
            </div>
            <div class="row  mt-2">
                <div class="col">
                    <label for="exampleFormControlTextarea1" class="form-label">Ширина</label>
                    <input class="form-control me-2" id="exampleFormControlTextarea1" type="search" placeholder="" aria-label="Search" v-model="book.width">
                </div>
            </div>
            <div class="row  mt-2">
                <div class="col">
                    <label for="exampleFormControlTextarea1" class="form-label">Длина</label>
                    <input class="form-control me-2" id="exampleFormControlTextarea1" type="search" placeholder="" aria-label="Search" v-model="book.bookLength">
                </div>
            </div>
            <div class="row  mt-2">
                <div class="col">
                    <label for="exampleFormControlTextarea1" class="form-label">В наличии(шт)</label>
                    <input class="form-control me-2" id="exampleFormControlTextarea1" type="search" placeholder="" aria-label="Search" v-model="book.count">
                </div>
            </div>
            <div class="row  mt-2">
                <div class="col">
                    <label for="exampleFormControlTextarea1" class="form-label">Вес(г)</label>
                    <input class="form-control me-2" id="exampleFormControlTextarea1" type="search" placeholder="" aria-label="Search" v-model="book.weigth">
                </div>
            </div>
            <div class="row  mt-2">
                <div class="col">
                    <label for="exampleFormControlTextarea1" class="form-label">Скидка(%)</label>
                    <input class="form-control me-2" id="exampleFormControlTextarea1" type="search" placeholder="" aria-label="Search" v-model="book.discount">
                </div>
            </div>
            <div class="row  mt-2">
                <div class="col">
                    <label for="exampleFormControlTextarea1" class="form-label ">Стоимость(₽)</label>
                    <input class="form-control me-2 mb-5" id="exampleFormControlTextarea1" type="search" placeholder="" aria-label="Search" v-model="book.price">
                </div>
            </div>
        </div>
    </div>`
    })
    bookEditBody.mount('#bookEditBody')
</script>