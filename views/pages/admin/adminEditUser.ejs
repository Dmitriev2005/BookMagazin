<%- include("../../partials/head") %>
<div class="container" id="bodyEditUser2">
    <h1 class="mt-2">Редактировать пользователя</h1>
    <div class="row mt-4">
        <div class="col-2">
            <svg @click="handlerCancel" xmlns="http://www.w3.org/2000/svg" width="50" height="50" fill="blue" class="bi bi-arrow-left-circle-fill" viewBox="0 0 16 16">
                <path d="M8 0a8 8 0 1 0 0 16A8 8 0 0 0 8 0zm3.5 7.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5z"/>
              </svg>
        </div>
        <div class="col">
            <div class="row">
                <div class="col-3">
                    <label for="userName">Фамилия</label>
                    <input v-model="userData.lastname" id="userName" class="form-control me-2" type="search" aria-label="Search">
                </div>
            </div>
            <div class="row">
                <div class="col-3">
                    <label for="userName">Имя</label>
                    <input v-model="userData.name" id="userName" class="form-control me-2" type="search" aria-label="Search">
                </div>
            </div>
          
            <div class="row">
                <div class="col-3">
                    <label for="userName">Почта</label>
                    <input v-model="userData.email" id="userName" class="form-control me-2" type="search" aria-label="Search">
                </div>
            </div>
            <div class="row mt-3">
                <div class="col-3">
                   <button class="btn btn-success" @click="handlerSave">Сохранить учетную запись</button>
                </div>
                <div class="col-3">
                    <button class="btn btn-danger" @click="delUser">Удалить учетную запись</button>
                 </div>
            </div>
        </div>
    </div>
   
</div>
<script>
    const bodyEditUser2 = Vue.createApp({
        data(){
            return{
                userData:{
                    lastname:"",
                    name:"",
                    email:""
                },
                idUser:0
            }

        },
        methods:{
            async getUserData(){
                this.idUser = new URL(location.href).searchParams.get('id')
                if(this.idUser!=='undefined'){
                    const res = await fetch('http://localhost:9001/admin/json/get-this-user/'+this.idUser)
                    if(res.ok){
                        this.userData = await res.json()

                    }
                }
              
            },
            async handlerSave(){
                const res = await fetch('http://localhost:9001/admin/save/this-user/'+this.idUser,{
                    headers:{
                        "Content-Type":"application/json"
                    },
                    method:'POST',
                    body:JSON.stringify(this.userData)
                })
                if(res.ok){
                    alert('Запись обновлена!')
                    location.href = 'http://localhost:9001/admin/content/get-user-list'
                }
            },
            async delUser(){
                const res = await fetch('http://localhost:9001/admin/del/this-user/'+this.idUser)
                if(res.ok){
                    alert('Запись удалена!')
                    location.href = 'http://localhost:9001/admin/content/get-user-list'
                }
            },
            handlerCancel(){
                location.href = 'http://localhost:9001/admin/content/get-user-list'
            }
        },
        mounted(){
            this.getUserData()
        }
    })
    bodyEditUser2.mount('#bodyEditUser2')
</script>